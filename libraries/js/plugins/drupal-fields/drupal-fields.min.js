(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("jQuery"));
	else if(typeof define === 'function' && define.amd)
		define(["jQuery"], factory);
	else if(typeof exports === 'object')
		exports["drupal-fields"] = factory(require("jQuery"));
	else
		root["drupal-fields"] = factory(root["jQuery"]);
})(self, function(__WEBPACK_EXTERNAL_MODULE_jquery__) {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./plugins/drupal-fields/blocks.js":
/*!*****************************************!*\
  !*** ./plugins/drupal-fields/blocks.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @file
 * Contains blocks.js
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (editor) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var blockManager = editor.BlockManager;
  /* Blocks : Drupal Field */

  opts.fields.forEach(function (field) {
    var fieldId = "drupal-field-".concat(field.name);
    blockManager.add(fieldId, {
      label: field.label,
      category: opts.category,
      attributes: {
        "class": 'fa fa-drupal'
      },
      content: {
        type: 'drupal-field',
        attributes: {
          'field-name': field.name
        }
      }
    });
  });
});

/***/ }),

/***/ "./plugins/drupal-fields/components.js":
/*!*********************************************!*\
  !*** ./plugins/drupal-fields/components.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "jquery");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/component */ "./utils/component.js");
/**
 * @file
 * Contains components.js
 */


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (editor) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var domComponents = editor.DomComponents;
  var defaultType = domComponents.getType('default');
  /* Component type : Drupal Field */

  domComponents.addType('drupal-field', {
    isComponent: function isComponent(el) {
      return el && el.tagName && el.tagName === 'DRUPAL-FIELD';
    },
    model: {
      defaults: {
        name: opts.componentLabel,
        tagName: "drupal-field",
        editable: false,
        droppable: false,
        stylable: false,
        propagate: ['editable', 'droppable', 'stylable'],
        traits: []
      },
      toHTML: function toHTML() {
        var defaultHTML = defaultType.model.prototype.toHTML.call(this);
        var $element = jquery__WEBPACK_IMPORTED_MODULE_0___default()(defaultHTML);
        $element.empty();
        return $element.get(0).outerHTML;
      }
    },
    view: {
      init: function init(component) {
        if (component.model.components().length === 0) {
          (0,_utils_component__WEBPACK_IMPORTED_MODULE_1__.addLoadingBlock)(component);
          jquery__WEBPACK_IMPORTED_MODULE_0___default().get(opts.field_route, component.model.get('attributes')).then(function (response) {
            (0,_utils_component__WEBPACK_IMPORTED_MODULE_1__.renderComponentContent)(editor, component, response);
          })["catch"](function (response) {
            (0,_utils_component__WEBPACK_IMPORTED_MODULE_1__.renderComponentContent)(editor, component, {
              tagName: "div",
              attributes: {
                "class": 'gjs-drupal-block gjs-block-error'
              },
              content: response.responseJSON
            });
          });
        }
      }
    }
  });
});

/***/ }),

/***/ "./utils/component.js":
/*!****************************!*\
  !*** ./utils/component.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addLoadingBlock": () => (/* binding */ addLoadingBlock),
/* harmony export */   "setComponentName": () => (/* binding */ setComponentName),
/* harmony export */   "disableChildComponents": () => (/* binding */ disableChildComponents),
/* harmony export */   "renderComponentContent": () => (/* binding */ renderComponentContent)
/* harmony export */ });
/**
 * @file
 * Contains component.js
 */
var addLoadingBlock = function addLoadingBlock(component) {
  component.model.empty().components().add({
    tagName: "div",
    attributes: {
      "class": 'gjs-drupal-block'
    },
    content: '<div class="lds-dual-ring"></div> ' + Drupal.t('Loading...')
  });
};
var setComponentName = function setComponentName(editor, component) {
  var blockManager = editor.BlockManager;
  var attrs = component.model.getAttributes();

  if (typeof attrs['block-plugin-id'] !== 'undefined') {
    var blockId = "drupal-block-".concat(attrs['block-plugin-id']);
    var block = blockManager.get(blockId);

    if (block) {
      component.model.set('name', block.get('label'));
    }
  }
};
var disableChildComponents = function disableChildComponents(components) {
  components.forEach(function (c) {
    c.set({
      badgable: false,
      copyable: false,
      draggable: false,
      highlightable: false,
      hoverable: false,
      selectable: false,
      removable: false
    });

    if (c.components().length > 0) {
      disableChildComponents(c.components());
    }
  });
};
var renderComponentContent = function renderComponentContent(editor, component, content) {
  component.model.empty().components().add(content);
  setComponentName(editor, component);
  disableChildComponents(component.model.components());
};

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_jquery__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!************************************************!*\
  !*** ./plugins/drupal-fields/drupal-fields.js ***!
  \************************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components */ "./plugins/drupal-fields/components.js");
/* harmony import */ var _blocks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blocks */ "./plugins/drupal-fields/blocks.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * @file
 * Contains drupal-fields.js
 */


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function (editor) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var config = _objectSpread({
    category: {
      id: 'drupal-fields',
      label: Drupal.t('Drupal Fields'),
      open: false,
      order: 10
    },
    componentLabel: Drupal.t('Drupal Field')
  }, opts);

  (0,_components__WEBPACK_IMPORTED_MODULE_0__["default"])(editor, config);
  (0,_blocks__WEBPACK_IMPORTED_MODULE_1__["default"])(editor, config);
});
})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,